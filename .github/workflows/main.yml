name: Build Lens

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - name: Export version to variable
        run: |
            export LENS_VERSION=$(cat version)
            echo "LENS_VERSION=$LENS_VERSION" >> $GITHUB_ENV
        shell: bash
      - uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
      - name: Checkout Lens
        run: |
          git clone https://github.com/lensapp/lens.git -b v${{ env.LENS_VERSION }}
      - name: Update Lens
        working-directory: lens
        run: |
          cp ../update.js update.js
          node update.js
      - name: Prep
        working-directory: lens
        shell: bash
        run : |
          make node_modules binaries/client build-extensions
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install visualstudio2019buildtools visualstudio2019-workload-vctools
          fi
      - name: Build Lens
        working-directory: lens
        shell: bash
        run : |
          yarn run compile
          if [ "$RUNNER_OS" == "Windows" ]; then
            rm -rf node_modules/win-ca/pem
          fi
      - name: Build/release Lens app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: $${{ secrets.github_token }}
          args: "--dir --x64 --arm64 --config.dmg.sign=false"
          skip_build: true
          release: true
          max_attempts: 2
          package_root: "lens"
          # windows_certs: ${{ secrets.WIN_CERT }}
          # windows_certs_password: ${{ secrets.WIN_PASS }}
          # mac_certs: $${{ secrets.MAC_CERT }}
          # mac_certs_password: $${{ secrets.MAC_PASS }}


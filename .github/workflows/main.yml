name: Build Lens

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
        node-version: [16.x]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Export version to variable
        run: |
            export LENS_VERSION=$(cat version)
            echo "LENS_VERSION=$LENS_VERSION" >> $GITHUB_ENV
        shell: bash
      - name: Checkout Lens
        uses: actions/checkout@v3
        with:
          repository: lensapp/lens
          fetch-depth: 0
          path: lens
          ref: v${{ env.LENS_VERSION }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Update Lens
        working-directory: lens
        run: |
          cp ../update.js update.js
          node update.js
      
      - name: Build Linux Lens
        working-directory: lens
        run: make build
        shell: bash
        if: ${{ runner.os == 'Linux' }}
        env:
          ELECTRON_BUILDER_EXTRA_ARGS: "--x64 --arm64"
      
      - name: Build macOS Lens
        working-directory: lens
        run: make build
        shell: bash
        if: ${{ runner.os == 'macOS' }}
        env:
          ELECTRON_BUILDER_EXTRA_ARGS: "--x64 --arm64"
      
      - name: Build Windows Lens
        working-directory: lens
        run: make build
        shell: bash
        if: ${{ runner.os == 'Windows' }}
        env:
          ELECTRON_BUILDER_EXTRA_ARGS: "--x64"
          #CSC_LINK: ${{ secrets.win-cert-link }}
          #CSC_KEY_PASSWORD: ${{ secrets.win-cert-password }}
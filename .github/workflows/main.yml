name: Build Lens

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
        node-version: [16.x]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 360
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Export version to variable
        run: |
            export LENS_VERSION=$(cat version)
            echo "LENS_VERSION=$LENS_VERSION" >> $GITHUB_ENV
        shell: bash
      - name: Checkout Lens
        uses: actions/checkout@v3
        with:
          repository: lensapp/lens
          fetch-depth: 0
          path: lens
          ref: v${{ env.LENS_VERSION }}
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Update Lens
        working-directory: lens
        run: |
          cp ../update.js update.js
          node update.js
      
      - name: Build Linux Lens
        working-directory: lens
        run: make build
        shell: bash
        if: ${{ runner.os == 'Linux' }}
        env:
          ELECTRON_BUILDER_EXTRA_ARGS: "--x64 --arm64"
      
      - name: Build macOS Lens
        working-directory: lens
        run: make build
        shell: bash
        if: ${{ runner.os == 'macOS' }}
        env:
          ELECTRON_BUILDER_EXTRA_ARGS: "--x64 --arm64"
      
      - name: Build Windows Lens
        working-directory: lens
        run: make build
        shell: bash
        if: ${{ runner.os == 'Windows' }}
        env:
          ELECTRON_BUILDER_EXTRA_ARGS: "--x64"
          CSC_LINK: ${{ secrets.WIN_CERT_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.WIN_CERT_PASS }}

      - uses: actions/upload-artifact@v3
        if: github.ref != 'refs/heads/main'
        with:
          name: OpenLens-${{ matrix.os }}
          retention-days: 5
          path: |
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.dmg
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.AppImage
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.deb
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.rpm
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.zip
            lens/dist/OpenLens-${{ env.LENS_VERSION }}.exe
      
      - name: Generate Changelog
        run: curl -s https://api.github.com/repos/lensapp/lens/releases/latest | jq -r 'select(.prerelease == false) | .body[0:]' > ${{ github.workspace }}-CHANGELOG.txt
      
      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ env.LENS_VERSION }}
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: | 
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.dmg
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.AppImage
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.deb
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.rpm
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.zip
            lens/dist/OpenLens-${{ env.LENS_VERSION }}.exe
      
      - name: Latest
        uses: softprops/action-gh-release@v0.1.15
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: Latest
          files: | 
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.dmg
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.AppImage
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.deb
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.rpm
            lens/dist/OpenLens-${{ env.LENS_VERSION }}*.zip
            lens/dist/OpenLens-${{ env.LENS_VERSION }}.exe
            lens/dist/lates*.yml
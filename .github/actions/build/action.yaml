name: build
description: build lens
inputs:
  win-certs:
    description: 'The HTTPS link (or base64-encoded data) to Windows Code Signing certificate.'
    required: false
    default: ''
  win-certs-password:
    description: 'The password to decrypt the certificate given in CSC_LINK for windows'
    required: false
    default: ''
  mac-certs:
    description: 'The HTTPS link (or base64-encoded data) to MacOS Code Signing certificate.'
    required: false
    default: ''
  mac-certs-password:
    description: 'The password to decrypt the certificate given in CSC_LINK for MacOS'
    required: false
    default: ''
  lens-path:
    description: 'The path to lens to run the script in (defaults to current)'
    required: false
    default: '.'

runs:
  using: composite
  steps:
    - name: Node Build
      shell: bash
      run: |
        cd ${{ inputs.lens-path }}
        make node_modules binaries/client
        make build-extensions
        yarn run build:tray-icons
        yarn run compile
    - name: Build Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        cd ${{ inputs.lens-path }}
        yarn run electron-builder --linux --x64 --arm64
    - name: Build Windows
      env:
        CSC_LINK: ${{ inputs.win-certs }}
        CSC_KEY_PASSWORD: ${{ inputs.win-certs-password }}
      if: runner.os == 'Windows'
      run: |
        cd ${{ inputs.lens-path }}
        rm -rf node_modules/win-ca/pem
        yarn run electron-builder --win
      shell: bash
    - name: Build Macos
      env:
        CSC_LINK: ${{ inputs.mac-certs }}
        CSC_KEY_PASSWORD: ${{ inputs.mac-certs-password }}
      if: runner.os == 'macOS'
      run: |
        cd ${{ inputs.lens-path }}
        yarn run electron-builder --mac --arm64 --x64
      shell: bash

